openapi: 3.1.0
info:
  title: My Manga List API - OpenAPI 3.1
  description: |-
    My Manga List API is a self-hosted platform for tracking manga and manga-like series you have read, are reading, or plan to read. It is designed for personal use but can also be deployed by anyone who wishes to manage their own reading list.
    
    As a self-hosted FOSS solution, you have full control over your data and privacy. Please consider whether hosting and managing your own database fits your needs. If you wish to contribute to this project or need help, the documentation and community are here for you.
    - [Project Github Page](https://github.com/ma-tecik/MyMangaList)
    ***
    This project relies on public APIs from MangaUpdates, Mangadex, and MyAnimeList to provide up-to-date manga information. We sincerely thank these communities and recommend users to contribute to their databases to keep the ecosystem rich and accurate. By using My Manga List API, you acknowledge and agree to the Terms of Service of these third-party platforms.
    - [MangaUpdates](https://www.mangaupdates.com/), [API usage Policy](https://api.mangaupdates.com/#section/Acceptable-Use-Policy)
    - [Mangadex](https://mangadex.org/), [API usage Policy](https://api.mangadex.org/docs/#acceptable-usage-policy)
    - [MyAnimeList](https://myanimelist.net/), [API License and Developer Agreement](https://myanimelist.net/static/apiagreement.html)
  termsOfService: https://github.com/ma-tecik/MyMangaList/ToS.md
  contact:
    name: Mehmet Akif Tecik
    url: "https://github.com/ma-tecik"
    email: "mehmetakiftecik@gmail.com"
  license:
    name: GNU Affero General Public License v3.0
    url: https://www.gnu.org/licenses/agpl-3.0.html
  version: 1.0.0
servers:
  - url: "http://127.0.0.1:5000/api/v1"
    description: Localhost Server (for development purposes)
  - url: "https://dev.mat.tr.eu.org/api/v1"
    description: Development Server (DNS record may be deleted any time)
tags:
  - name: Series
    description: Operations related to series.
  - name: Authors
    description: Operations related to authors.
  - name: H
    description: Operations related to hentai.
  - name: Misc
    description: Other operations
  - name: Integration
    description: Operation related to external sites
paths:
  /ping:
    get:
      operationId: getPing
      summary: Ping healthcheck
      description: Returns a plaintext response containing only the word 'pong' if the API is healthy.
      tags: [Misc]
      security: []
      responses:
        '200':
          description: Pong
          content:
            text/plain:
              schema:
                type: string
                default: pong

  /series:
    get:
      operationId: getSeriesList
      summary: Retrieve series list
      description: Returns a list of series with optional filters for status, type, and tags.
      tags: [Series]
      security: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: perpage
          in: query
          description: for pagination 30-100
          schema:
            type: integer
            default: 30
            minimum: 30
            maximum: 100
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/Status'
        - name: type
          in: query
          description: Filters by exact series type; use 'all' to include all types.
          schema:
            type: string
            enum:
              - all
              - Manga
              - Manhwa
              - Manhua
              - OEL
              - Vietnamese
              - Malaysian
              - Indonesian
              - Novel
              - Artbook
              - Other
            default: all
        - name: included
          in: query
          style: form
          explode: false
          description: |-
            Genres to include in results.
            For Josei, Seinen, Shoujo, Shounen; works matching any (OR logic) will be included, for other genres, works must match all (AND logic).
            Example: "Josei,Seinen,Action,Adventure" returns series that are Josei OR Seinen AND also have Action AND Adventure.
          schema:
            $ref: '#/components/schemas/GenresSearch'
        - name: excluded
          in: query
          style: form
          explode: false
          description: |-
            Genres to exclude from results (works containing any of these will be omitted).
            Example: "Hentai,Yaoi" will exclude any series with those genres.
          schema:
            $ref: '#/components/schemas/GenresSearch'
        - name: sort_by
          in: query
          schema:
            type: string
            enum:
              - rating-mu
              - rating-dex
              - rating-mal
              - title
              - time
            default: rating-mu
      responses:
        '200':
          description: Series list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseSeriesGet'
        '400':
          description: Bad request (invalid query)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
    post:
      operationId: createSeries
      summary: Add a series entry
      description: Adds a new series to your manga list.
      tags: [Series]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeriesDataEA'
      responses:
        '201':
          description: Series created
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    default: OK
                  data:
                    $ref: '#/components/schemas/Series'
                    required:
                      - id
                      - thumbnail_ext
                      - ids
                      - title
                      - type
                      - is_md
                      - status
                      - authors
        '400':
          description: Bad request (invalid query)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '409':
          description: Series already exists, use merge or update endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseMerge'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '502':
          description: Error while downloading series thumbnail.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
  /series/{id}:
    get:
      operationId: getSeriesById
      summary: Get a series by series_id
      description: Returns series details for a given series_id.
      tags: [Series]
      security: []
      parameters:
        - name: id
          in: path
          required: true
          description: Internal series ID
          schema:
            type: integer
      responses:
        '200':
          description: Series details
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    default: OK
                  data:
                    $ref: '#/components/schemas/Series'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
    delete:
      operationId: deleteSeries
      summary: Delete a series by series_id
      description: Deletes a series for given series_id.
      tags: [Series]
      security: []
      parameters:
        - name: id
          in: path
          required: true
          description: Internal series ID
          schema:
            type: integer
      responses:
        '200':
          description: Series deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    default: OK
                  data:
                    $ref: '#/components/schemas/Series'
        '400':
          description: Bad request (invalid query)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
    patch:
      operationId: updateSeries
      summary: Update a series by series_id
      description: |-
        Updates a series by given series_id  
        Note: All provided fields will be overwritten. External IDs are merged; titles, alt_titles and genres are fully replaced.
      tags: [Series]
      security: []
      parameters:
        - name: id
          in: path
          required: true
          description: Internal series ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SeriesBase'
                - type: object
                  properties:
                    thumbnail:
                      type: string
                      format: uri
                    timestamp:
                      $ref: '#/components/schemas/Timestamp'
                    integation:
                      type: boolean
                      description: Whether to update series data from external sources (if enabled in settings)
                      default: True
                    integration_genres:
                      type: boolean
                      description: Whether to update series genres from external sources (if enabled in settings)
                      default: True
      responses:
        '200':
          description: Series updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    default: OK
                  data:
                    $ref: '#/components/schemas/Series'
        '400':
          description: Bad request (invalid query)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '409':
          description: Series conflict, use merge endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseMerge'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'

  /series/{id}/ratings:
    patch:
      operationId: updateSeriesRatings
      summary: Update series ratings and vote counts
      description: Updates/overwrites ratings and vote counts of given series
      tags: [Series]
      security: []
      parameters:
        - name: id
          in: path
          required: true
          description: Internal series ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_rating:
                  type: number
                  format: float
                  minimum: 1
                  maximum: 10
                mu_rating:
                  type: number
                  format: float
                  minimum: 1
                  maximum: 10
                mu_votes:
                  type: integer
                  minimum: 1
                dex_rating:
                  type: number
                  format: float
                  minimum: 1
                  maximum: 10
                dex_votes:
                  type: integer
                  minimum: 1
                mal_rating:
                  type: number
                  format: float
                  minimum: 1
                  maximum: 10
                mal_votes:
                  type: integer
                  minimum: 1
      responses:
        '204':
          description: Updated
        '400':
          description: Bad request (invalid query)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'

  /external/series/ratings:
    put:
      operationId: externalUpdateSeriesRatings
      summary: Update a list of series' ratings and vote counts
      description: Updates/adds/overwrites or skips (if series not exist in db) ratings and vote counts of given list of series
      tags: [Series]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_type:
                  type: string
                  enum:
                    - mu
                    - dex
                    - mal
                data:
                  type: array
                  items:
                    type: object
                    allOf:
                      - type: object
                        properties:
                          id:
                            description: external ID
                            examples:
                              - 'g25jlvk'
                              - 'b15632d7-88d0-4233-9815-c01e75cabda8'
                              - '92182'
                          rating:
                            type: number
                            format: float
                            minimum: 1
                            maximum: 10
                          votes:
                            type: integer
                            minimum: 1
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    default: OK
                  not_exist:
                    type: array
                    description: series that is not exist in the db
                    items:
                      type: string
                      examples:
                        - 'g25jlvk'
                        - 'b15632d7-88d0-4233-9815-c01e75cabda8'
                        - '92182'
        '400':
          description: Bad request (invalid query)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'

  /external/series/id:
    get:
      operationId: externalSeriesID
      summary: Get the series_id of a series by external IDs
      description: Returns the series_id of a series based on given one or more MU, Dex, MAL, Bato, line IDs.
      tags: [Series]
      security: []
      parameters:
        - name: mu
          in: query
          schema:
            type: string
        - name: dex
          in: query
          schema:
            type: string
        - name: mal
          in: query
          schema:
            type: integer
        - name: bato
          in: query
          schema:
            type: integer
        - name: line
          in: query
          schema:
            type: string
      responses:
        '200':
          description: series_id
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    default: OK
                  data:
                    type: integer
        '400':
          description: Bad request (invalid query)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '409':
          description: Series conflict; manual merge required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseMerge'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'

  /external/series/data:
    get:
      operationId: externalSeriesData
      summary: Get the series details from external sources
      description: Retrieves and returns series details from external sources based on given one or more MU, Dex, MAL, Bato, or line IDs.
      tags: [Series]
      security: []
      parameters:
        - name: mu
          in: query
          schema:
            type: string
        - name: dex
          in: query
          schema:
            type: string
        - name: mal
          in: query
          schema:
            type: integer
        - name: bato
          in: query
          schema:
            type: integer
        - name: line
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Series data
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    default: OK
                  data:
                    $ref: '#/components/schemas/SeriesDataEA'
        '400':
          description: Bad request (invalid query)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '502':
          description: Error while retrieving series details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'

  /authors:
    get:
      operationId: getAuthorList
      summary: Retrieve authors list
      description: Returns the list of authors in the DB with the count of their series.
      tags: [Authors]
      security: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
      responses:
        '200':
          description: Author list
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    default: OK
                  page:
                    type: integer
                    default: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: internal author id
                        name:
                          type: string
                        series:
                          type: integer
                          description: Total count of his/her series
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'

    post:
      operationId: createAuthor
      summary: Add an author entry
      description: |-
        Adds an author with only name.
        Note: Use this endpoint for only authors of Bato and Line series.
      tags: [Authors]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required: [name]
      responses:
        '201':
          description: Author details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseAuthor'
        '400':
          description: Bad request (missing or invalid body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'

  /authors/search:
    get:
      operationId: searchAuthor
      summary: Search authors by name
      description: Returns authors matching the given name.
      tags: [Authors]
      security: []
      parameters:
        - name: name
          in: query
          description: Name or partial name to search for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of matching authors
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    default: OK
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: internal author id
                        ids:
                          $ref: '#/components/schemas/AuthorIDs'
                        name:
                          type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'

  /authors/{id}:
    get:
      operationId: getAuthorById
      summary: Get an author by author_id
      description: Returns author's details for the given author_id.
      tags: [Authors]
      security: []
      parameters:
        - name: id
          in: path
          required: true
          description: Internal author ID
          schema:
            type: integer
      responses:
        '200':
          description: Author details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseAuthor'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
    patch:
      operationId: updateAuthor
      summary: Update an author by author_id
      description: |-
        Updates an author by given author_id  
        Note: IDs will be merged, name will be overwritten
      tags: [Authors]
      security: []
      parameters:
        - name: id
          in: path
          required: true
          description: Internal author ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  $ref: '#/components/schemas/AuthorIDs'
                name:
                  type: string
      responses:
        '200':
          description: Author updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseAuthor'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'

  /authors/merge:
    post:
      operationId: mergeAuthors
      summary: Merge 2 or more authors by author_ids
      description: |-
        Merges 2 or more authors by the given author_ids.
        Note: External IDs will be merged; the smallest internal ID will be kept, and the author's name of the kept record will remain.
      tags: [Authors]
      security: []
      parameters:
        - name: ids
          in: query
          style: form
          explode: false
          description: Internal author ID
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: Author updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseAuthor'
        '400':
          description: Bad request (invalid query)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '409':
          description: Conflict in external IDs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'

  /h:
    post:
      operationId: addHentai
      summary: Add a hentai
      description: Adds a hentai
      tags: [H]
      security: []
      parameters:
        - name: id
          in: query
          required: true
          description: nHentai id or SchaleNetwork id/key
          schema:
            type: string
      responses:
        '204':
          description: Added or already exist in db. We don't check.
        '400':
          description: Bad request (invalid query)
        '500':
          description: Internal error, check logs.
    delete:
      operationId: deleteHentai
      summary: Delete a hentai
      description: Deletes a hentai
      tags: [H]
      security: []
      parameters:
        - name: id
          in: query
          required: true
          description: nHentai id or SchaleNetwork id/key
          schema:
            type: string
      responses:
        '204':
          description: Deleted or not exist in db. We don't check.
        '400':
          description: Bad request (invalid query)
        '500':
          description: Internal error, check logs.

  /h/{id}:
    head:
      operationId: isNhentaiInDB
      summary: Check if a hentai is in DB
      description: Checks if a hentai is in the database.
      tags: [H]
      security: []
      parameters:
        - name: id
          in: path
          required: true
          description: nHentai id
          schema:
            type: integer
      responses:
        '204':
          description: It is.
        '404':
          description: It is not.
        '500':
          description: Internal error, check logs.

  /h/{id}/{key}:
    head:
      operationId: isSchaleInDB
      summary: Check if a hentai is in DB
      description: Checks if a hentai is in the database.
      tags: [H]
      security: []
      parameters:
        - name: id
          in: path
          required: true
          description: SchaleNetwork id
          schema:
            type: integer
        - name: key
          in: path
          required: true
          description: SchaleNetwork key
          schema:
            type: string
      responses:
        '204':
          description: It is.
        '404':
          description: It is not.
        '500':
          description: Internal error, check logs.

  /status:
    get:
      operationId: getStatus
      summary: Your reading status
      description: Returns your reading status.
      tags: [Misc]
      security: []
      responses:
        '200':
          description: Your reading status
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    default: OK
                  data:
                    type: object
                    properties:
                      series_total:
                        type: integer
                      series_by_status:
                        type: object
                        properties:
                          plan_to_read:
                            type: integer
                          reading:
                            type: integer
                          completed:
                            type: integer
                          one_shots:
                            type: integer
                          dropped:
                            type: integer
                          on_hold:
                            type: integer
                          ongoing:
                            type: integer
                      series_by_type:
                        type: object
                        properties:
                          manga:
                            type: integer
                          manhwa:
                            type: integer
                          manhua:
                            type: integer
                          oel:
                            type: integer
                          vietnamese:
                            type: integer
                          malaysian:
                            type: integer
                          indonesian:
                            type: integer
                          novel:
                            type: integer
                          artbook:
                            type: integer
                          other:
                            type: integer
                      authors:
                        type: integer
                      h:
                        type: integer
                      mu_integration:
                        type: boolean
                      dex_integration:
                        type: boolean
                      mal_integration:
                        type: boolean

  /settings:
    get:
      operationId: getSettings
      summary: Retrieve settings
      description: Returns settings
      tags: [Misc]
      security: []
      responses:
        '200':
          description: Settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseSettings'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
    put:
      operationId: updateSettings
      summary: Update settings
      description: Updates settings
      tags: [Misc]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settings'
      responses:
        '204':
          description: Settings updated
        '400':
          description: Bad request (missing or invalid body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'

  /integration/mu/{job}:
    put:
      operationId: MuIntegration
      summary: Start a MangaUpdates integration job
      description: |-
        Starts a MangaUpdates integration job
        - update-ratings: Updates ratings in the DB from MangaUpdates, both avarage and user ratings.
        - update-ongoing: 
        - sync-lists: Sync lists. Works based on the latest changes (Thanks MU for "time_added" timestamp)
        - update-series: Updates series data.
      tags: [Integration]
      security: []
      parameters:
        - name: job
          in: path
          required: true
          schema:
            type: string
            enum:
              - 'update-ratings'
              - 'update-ongoing'
              - 'sync-lists'
              - 'update-series'
      responses:
        '204':
          description: Job completed
        '400':
          description: Bad request (integration disabled)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'

  /integration/dex/{job}:
    put:
      operationId: DexIntegration
      summary: Start a MangaDex integration job
      description: |-
        Starts a MangaDex integration job
        - update-ratings: Updates ratings in the DB from MangaDex, both avarage and user ratings.
        - sync-lists: Sync lists. If "DEX_INTEGRATION_FORCED" is disabled practically does nothing.
      tags: [Integration]
      security: []
      parameters:
        - name: job
          in: path
          required: true
          schema:
            type: string
            enum:
              - 'update-ratings'
              - 'sync-lists'
      responses:
        '204':
          description: Job completed
        '400':
          description: Bad request (integration disabled)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'
        '500':
          description: Internal error, check logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseKO'



components:
  schemas:
    SeriesBase:
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/IDs'
        title:
          type: string
        alt_titles:
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/Type'
        description:
          type: string
        vol_ch:
          type: string
          description: Volume and chapter information
        is_md:
          type: boolean
          description: True if description and vol_ch are in Markdown format
        genres:
          $ref: '#/components/schemas/Genres'
        status:
          $ref: '#/components/schemas/Status'
        year:
          type: integer
          examples:
            - 2000
    SeriesData:
      allOf:
        - $ref: '#/components/schemas/SeriesBase'
        - type: object
          properties:
            authors:
              $ref: '#/components/schemas/AuthorsS'
    SeriesDataEA:
      allOf:
        - $ref: '#/components/schemas/SeriesBase'
        - type: object
          properties:
            authors:
              $ref: '#/components/schemas/AuthorsSE'
            thumbnail:
              type: string
              format: uri
      required:
        - ids
        - title
        - type
        - status
        - authors
        - thumbnail

    Series:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: internal ID of the series
            thumbnail_ext:
              type: string
              description: extension of thumbnail(e.g., jpg, png)
        - $ref: '#/components/schemas/SeriesData'
        - type: object
          properties:
            integation:
              type: boolean
              description: Whether to update series data from external sources (if enabled in settings)
              default: True
            integration_genres:
              type: boolean
              description: Whether to update series genres from external sources (if enabled in settings)
              default: False
            ratings:
              type: object
              description: Average (Bayesian) ratings of the series
              properties:
                mu:
                  type: number
                  format: float
                dex:
                  type: number
                  format: float
                mal:
                  type: number
                  format: float
            user_rating:
              type: number
              format: float
      required:
        - id
        - thumbnail_ext
        - ids
        - title
        - type
        - status
        - authors

    IDs:
      type: object
      description: External IDs from various sources
      properties:
        mu:
          type: string
          pattern: '^[0-9a-z]+$'
          examples:
            - 's0htgp6'
          description: MangaUpdates ID in base36 format NOT base10
        dex:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
          description: Mangadex ID
        mal:
          type: integer
          description: MyAnimeList ID
        bato:
          type: integer
          description: Bato.to ID
        line:
          type: string
          pattern: '^(o:[0-9]{4}|c:[0-9]{6})$'
          description: 'Line Webtoon ID (original: o:NNNN, canvas: c:NNNNNN)'
    Type:
      type: string
      description: Series type
      enum:
        - all
        - Manga
        - Manhwa
        - Manhua
        - OEL
        - Vietnamese
        - Malaysian
        - Indonesian
        - Novel
        - Artbook
        - Other
        - minor
    Status:
      type: string
      description: Reading status
      enum:
        - Plan to Read
        - Reading
        - Completed
        - One-shot
        - Dropped
        - On hold
        - Ongoing
    Timestamp:
      type: object
      description: UNIX timestamp in seconds (Only one of mu, dex, mal)
      properties:
        mu:
          type: integer
        dex:
          type: integer
        mal:
          type: integer
      additionalProperties: false
      minProperties: 1
      maxProperties: 1

    Genres:
      type: array
      description: Genre list
      items:
        type: string
        enum:
          - Josei
          - Seinen
          - Shoujo
          - Shounen
          - GL
          - BL
          - Lolicon
          - Shotacon
          - Hentai
          - Smut
          - Borderline H
          - Adult
          - Mature
          - Ecchi
          - Doujinshi
          - 4-Koma
          - Anthology
          - Harlequin
          - Webtoon
          - Old-Style
          - Award
          - Cancel
          - Rushed
          - European
          - Asian
          - isekai
          - Reverse isekai
          - Time Rewind
          - Villainess
          - Revenge
          - Modern
          - Childhood F.
          - Con. Marr.
          - Arranged Marr.
          - Sensei
          - Age Gap
          - Office
          - Boss-Sub
          - Showbiz
          - Action
          - Adventure
          - Comedy
          - Drama
          - Fantasy
          - Gender Bender
          - Harem
          - Reverse Harem
          - Historical
          - Horror
          - Martial Arts
          - Mecha
          - Mystery
          - Psychological
          - Romance
          - School Life
          - Sci-fi
          - Slice of Life
          - Sports
          - Supernatural
          - Tragedy
          - Incest
          - Yandere
          - Toxic Rel.
    GenresSearch:
      allOf:
        - type: array
          items:
            type: string
            enum:
              - nsfw
        - $ref: '#/components/schemas/Genres'

    AuthorTypes:
      type: string
      description: Author type
      enum:
        - Author
        - Artist
        - Both
    AuthorIDs:
      type: object
      properties:
        mu:
          type: string
          pattern: '^[0-9a-z]+$'
          examples:
            - '45vzs8e'
          description: MangaUpdates ID in base36 format NOT base10
        dex:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
          description: Mangadex ID
        mal:
          type: integer
          description: MyAnimeList ID
    AuthorsS:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            description: internal ID of the author
          name:
            type: string
            description: Author's name
          type:
            $ref: '#/components/schemas/AuthorTypes'
        required:
          - id
          - type
    AuthorsSE:
      type: array
      items:
        type: object
        properties:
          ids:
            $ref: '#/components/schemas/AuthorIDs'
          name:
            type: string
            description: Author's name
          type:
            $ref: '#/components/schemas/AuthorTypes'
        required:
          - type

    settings:
      type: object
      properties:
        main_rating:
          type: string
          enum: [mu, dex, mal]
        title_languages:
          type: string
          description: 'Comma-separated ISO 639-1 codes. Example: "en,tr,de"'
        mu_integration:
          type: boolean
        mu_username:
          type: string
        mu_password:
          type: string
        dex_integration:
          type: boolean
        dex_token:
          type: string
        mal_integration:
          type: boolean
    responseSettings:
      type: object
      properties:
        result:
          type: string
          default: OK
        data:
          type: object
          properties:
            main_rating:
              type: string
              enum: [mu, dex, mal]
            title_languages:
              type: string
              description: 'Comma-separated ISO 639-1 codes. Example: "en,tr,de"'
            mu_integration:
              type: boolean
            mu_username:
              type: string
            mu_password:
              type: boolean
            dex_integration:
              type: boolean
            dex_token:
              type: boolean
            mal_integration:
              type: boolean

    responseKO:
      type: object
      properties:
        result:
          type: string
          default: KO
        error:
          type: string
          description: 'error message'
      required:
        - result
        - error
    responseMerge:
      description: 'Duplicate entry, use merge endpoint (if available) or merge manually.'
      type: object
      properties:
        result:
          type: string
          default: 'MERGE_REQUIRED'
        error:
          type: string
          description: 'error message'
          default: 'Manual merge required for ...'
        url:
          type: string
          format: uri-reference
          description: 'URL to trigger manual merge for conflicting entries'
      required:
        - result
        - error
        - url
    responseSeriesGet:
      type: object
      properties:
        result:
          type: string
          default: OK
        page:
          type: integer
          default: 1
        data:
          type: array
          items:
            type: object
            allOf:
              - type: object
                properties:
                  id:
                    type: integer
                    description: internal ID of the series
                  thumbnail_ext:
                    type: string
                    description: extension of thumbnail (e.g., jpg, png)
              - $ref: '#/components/schemas/SeriesData'
              - type: object
                properties:
                  rating:
                    type: number
                    format: float
                    description: Average rating of the series (based on selected or joined source)
                  user_rating:
                    type: number
                    format: float
    responseAuthor:
      type: object
      properties:
        result:
          type: string
          default: OK
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: internal author id
              ids:
                $ref: '#/components/schemas/AuthorIDs'
              name:
                type: string
              series:
                type: object
                description: Count of his/her series
                properties:
                  as_author:
                    type: integer
                  as_artist:
                    type: integer
                  as_both:
                    type: integer

